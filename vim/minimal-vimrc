" This vimrc is mostly for use in a light weight
" environment, where you just want to rely on
" defaults and nothing else

" ===============================================
" Mappings

" General
inoremap jk <esc>

" Pane navigation
noremap <Space>h <C-W>h
noremap <Space>j <C-W>j
noremap <Space>k <C-W>k
noremap <Space>l <C-W>l

" Center screen while jumping in search
nnoremap n nzzzv
nnoremap N Nzzzv

" Moving lines around in visual mode
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv

" Better indenting
vnoremap > >gv
vnoremap < <gv

" Window split shortcuts
nnoremap <Space>v :vsplit<CR>
nnoremap <Space>- :split<CR>

" tab navigation
noremap  <C-l> :tabnext<CR>
noremap  <C-h> :tabprevious<CR>
noremap  <C-n> :tabnew<CR>

" system clipboard sync for easier use across vim instances
vnoremap cp "+yy
nnoremap yp "+p

noremap <Space>of :wincmd v<bar> :Ex <bar> :vertical resize 30<CR>

" ===============================================

" ===============================================
" sets

set relativenumber
set number
syntax enable

" Make search easier
set smartcase
set ignorecase

" Sensible tabs
set tabstop=2 softtabstop=2

" Set block cursor always
set guicursor= "

" ===============================================

" search using rg
" TODO: check for existence of "rg" on system and 
" only then register these commands
set grepprg=rg\ --vimgrep
set grepformat^=%f:%l:%c:%m

" easier quickfix list for easily using search
nnoremap <silent> <C-j> :cnext<CR>
nnoremap <silent> <C-k> :cprevious<CR>

" open and close quickfix list easily
" QuickFixToggle ---------------------- {{{
function! QuickFixToggle()
    if empty(filter(getwininfo(), 'v:val.quickfix'))
      copen
    else
      cclose
    endif
endfunction
nnoremap <silent> <C-q> :call QuickFixToggle()<CR>
" }}}
